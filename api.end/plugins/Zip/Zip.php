<?php
 namespace library\plugins\Zip; class Zip { private static $allowExt = [ 'jpg', 'png', 'gif', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'txt', 'pdf', 'zip', 'rar', ]; private function isAllowExt($fileName) { $ext = array_pop(explode('.', $fileName)); $ext = trim($ext); $ext = strtolower($ext); return in_array($ext, self::$allowExt); } private function getDirList($dir) { $result = array(); if (is_dir($dir)) { $file_dir = scandir($dir); foreach ($file_dir as $file) { if ($file == '.' || $file == '..' || !$this->isAllowExt($file)) { continue; } elseif (is_dir($dir . $file)) { $result = array_merge($result, $this->getDirList($dir . $file . DIRECTORY_SEPARATOR)); } else { array_push($result, $dir . DIRECTORY_SEPARATOR . $file); } } } $result = array_unique($result); return $result; } public function zip($dir, $zipName = 'json', $save_path = null, $autoDownload = true) { if (!is_dir($dir)) { throw new \Exception('目录错误'); } $fileList = $this->getDirList($dir); if (!$fileList) { return true; } $save_filename = $zipName . '.zip'; $save_url = 'zip/' . $save_path ?: ''; $save_path = realpath(__DIR__ . '/../../') . $save_url; if (!file_exists($save_path)) { mkdir($save_path); @chmod($save_path, 0777); } $url = $save_url . $save_filename; $uri = $save_path . $save_filename; if (!file_exists($uri)) { $zip = new \ZipArchive(); if ($zip->open($uri, \ZIPARCHIVE::CREATE) !== true) { throw new \Exception('无法打开文件或zip文件创建失败'); } foreach ($fileList as $val) { if (file_exists($val)) { $zip->addFile($val, basename($val)); } } $zip->close(); @chmod($uri, 0777); } if (!file_exists($uri)) { throw new \Exception("压缩文件失败"); } if (true == $autoDownload) { header("Cache-Control: public"); header("Content-Description: File Transfer"); header('Content-disposition: attachment; filename=' . basename($uri)); header("Content-Type: application/zip"); header("Content-Transfer-Encoding: binary"); header('Content-Length: ' . filesize($uri)); @readfile($uri); } else { return $url; } } } 