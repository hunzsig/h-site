<?php
namespace plugins\Wxpay\Core\Data; use plugins\Wxpay\AbstractLib; use plugins\Wxpay\Core\WxPayException; class WxPayDataBase extends AbstractLib{ protected $values = array(); public function SetSign() { $sign = $this->MakeSign(); $this->values['sign'] = $sign; return $sign; } public function GetSign() { return $this->values['sign']; } public function IsSignSet() { return array_key_exists('sign', $this->values); } public function ToXml() { if(!is_array($this->values) || count($this->values) <= 0) { throw new WxPayException("数组数据异常！"); } $xml = "<xml>"; foreach ($this->values as $key=>$val) { if (is_numeric($val)){ $xml.="<".$key.">".$val."</".$key.">"; }else{ $xml.="<".$key."><![CDATA[".$val."]]></".$key.">"; } } $xml.="</xml>"; return $xml; } public function FromXml($xml) { if(!$xml){ throw new WxPayException("xml数据异常！"); } libxml_disable_entity_loader(true); $this->values = json_decode(json_encode(simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA)), true); return $this->values; } public function ToUrlParams() { $buff = ""; foreach ($this->values as $k => $v) { if($k != "sign" && $v != "" && !is_array($v)){ $buff .= $k . "=" . $v . "&"; } } $buff = trim($buff, "&"); return $buff; } public function MakeSign() { ksort($this->values); $string = $this->ToUrlParams(); $string = $string . "&key=".$this->getConfigs('key'); $string = md5($string); $result = strtoupper($string); return $result; } public function SetValues($values) { $this->values = $values; } public function GetValues() { return $this->values; } } 