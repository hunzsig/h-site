<?php
 namespace plugins\Wxpay; use \plugins\Wxpay\Core\WxPayException; class WxPayJsApiPay extends AbstractLib { private $curl_timeout = 30; public $data = null; public function GetOpenid($baseUrl = null, $code = null) { if (!$code) { $url = $this->__CreateOauthUrlForCode($baseUrl); return "Location: $url"; } else { $openid = $this->getOpenidFromMp($code); return $openid; } } public function GetJsApiParameters($UnifiedOrderResult) { if (!array_key_exists("appid", $UnifiedOrderResult) || !array_key_exists("prepay_id", $UnifiedOrderResult) || $UnifiedOrderResult['prepay_id'] == "") { throw new WxPayException("参数错误"); } $jsapi = new \plugins\Wxpay\Core\Data\WxPayJsApiPay(); $jsapi->setConfigs($this->getConfigs()); $jsapi->SetAppid($UnifiedOrderResult["appid"]); $jsapi->SetTimeStamp($this->getConfigs('now')); $jsapi->SetNonceStr($this->getWxPayApi()->getNonceStr()); $jsapi->SetPackage("prepay_id=" . $UnifiedOrderResult['prepay_id']); $jsapi->SetSignType("MD5"); $jsapi->SetPaySign($jsapi->MakeSign()); $parameters = json_encode($jsapi->GetValues()); return $parameters; } public function GetOpenidFromMp($code) { $url = $this->__CreateOauthUrlForOpenid($code); $ch = curl_init(); curl_setopt($ch, CURLOPT_TIMEOUT, $this->curl_timeout); curl_setopt($ch, CURLOPT_URL, $url); curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, FALSE); curl_setopt($ch, CURLOPT_HEADER, FALSE); curl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE); if ($this->getConfigs('curl_proxy_host') != "0.0.0.0" && $this->getConfigs('curl_proxy_port') != 0) { curl_setopt($ch, CURLOPT_PROXY, $this->getConfigs('curl_proxy_host')); curl_setopt($ch, CURLOPT_PROXYPORT, $this->getConfigs('curl_proxy_port')); } $res = curl_exec($ch); curl_close($ch); $data = json_decode($res, true); $this->data = $data; $openid = $data['openid']; return $openid; } private function ToUrlParams($urlObj) { $buff = ""; foreach ($urlObj as $k => $v) { if ($k != "sign") { $buff .= $k . "=" . $v . "&"; } } $buff = trim($buff, "&"); return $buff; } public function GetEditAddressParameters() { $getData = $this->data; $data = array(); $data["appid"] = $this->getConfigs('appid'); $data["url"] = "http://" . $this->getConfigs('host') . $_SERVER['REQUEST_URI']; $data["timestamp"] = $this->getConfigs('now'); $data["noncestr"] = "1234568"; $data["accesstoken"] = $getData["access_token"]; ksort($data); $params = $this->ToUrlParams($data); $addrSign = sha1($params); $afterData = array( "addrSign" => $addrSign, "signType" => "sha1", "scope" => "jsapi_address", "appId" => $this->getConfigs('appid'), "timeStamp" => $data["timestamp"], "nonceStr" => $data["noncestr"] ); $parameters = json_encode($afterData); return $parameters; } private function __CreateOauthUrlForCode($redirectUrl) { $urlObj["appid"] = $this->getConfigs('appid'); $urlObj["redirect_uri"] = "$redirectUrl"; $urlObj["response_type"] = "code"; $urlObj["scope"] = "snsapi_base"; $urlObj["state"] = "STATE" . "#wechat_redirect"; $bizString = $this->ToUrlParams($urlObj); return "https://open.weixin.qq.com/connect/oauth2/authorize?" . $bizString; } private function __CreateOauthUrlForOpenid($code) { $urlObj["appid"] = $this->getConfigs('appid'); $urlObj["secret"] = $this->getConfigs('appsecret'); $urlObj["code"] = $code; $urlObj["grant_type"] = "authorization_code"; $bizString = $this->ToUrlParams($urlObj); return "https://api.weixin.qq.com/sns/oauth2/access_token?" . $bizString; } }