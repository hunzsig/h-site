<?php
 namespace Alipay\Lib\Fuwuchuang; class AlipayNotify extends AbstractLib{ private $https_verify_url = 'https://mapi.alipay.com/gateway.do?service=notify_verify&'; private $http_verify_url = 'http://notify.alipay.com/trade/notify_query.do?'; private $alipay_config; public function __construct($alipay_config){ $this->alipay_config = $alipay_config; } public function setConfig($alipay_config){ $this->alipay_config = $alipay_config; } public function AlipayNotify($alipay_config) { $this->__construct($alipay_config); } public function verifyNotify(){ if(empty($_POST)) { return false; } else { $decrypt_post_para = $_POST; if ($this->alipay_config['sign_type'] == '0001') { $decrypt_post_para['notify_data'] = $this->getRsa()->rsaDecrypt($decrypt_post_para['notify_data'], $this->alipay_config['private_key_path']); } $doc = $this->getDOMDocument(); $doc->loadXML($decrypt_post_para['notify_data']); $notify_id = $doc->getElementsByTagName( "notify_id" )->item(0)->nodeValue; $responseTxt = 'true'; if (! empty($notify_id)) {$responseTxt = $this->getRsaponse($notify_id);} $isSign = $this->getSignVeryfy($decrypt_post_para, $_POST["sign"],false); if (preg_match("/true$/i",$responseTxt) && $isSign) { return true; } else { return false; } } } public function verifyReturn(){ if(empty($_GET)) { return false; } else { $isSign = $this->getSignVeryfy($_GET, $_GET["sign"],true); if ($isSign) { return true; } else { return false; } } } public function decrypt($prestr) { return $this->getRsa()->rsaDecrypt($prestr, trim($this->alipay_config['private_key_path'])); } public function sortNotifyPara($para) { $para_sort['service'] = $para['service']; $para_sort['v'] = $para['v']; $para_sort['sec_id'] = $para['sec_id']; $para_sort['notify_data'] = $para['notify_data']; return $para_sort; } public function getSignVeryfy($para_temp, $sign, $isSort) { $para = $this->getCore()->paraFilter($para_temp); if($isSort) { $para = $this->getCore()->argSort($para); } else { $para = $this->sortNotifyPara($para); } $prestr = $this->getCore()->createLinkstring($para); $isSgin = false; switch (strtoupper(trim($this->alipay_config['sign_type']))) { case "MD5" : $isSgin = $this->getMd5()->md5Verify($prestr, $sign, $this->alipay_config['key']); break; case "RSA" : $isSgin = $this->getRsa()->rsaVerify($prestr, trim($this->alipay_config['ali_public_key_path']), $sign); break; case "0001" : $isSgin = $this->getRsa()->rsaVerify($prestr, trim($this->alipay_config['ali_public_key_path']), $sign); break; default : $isSgin = false; } return $isSgin; } public function getRsaponse($notify_id) { $transport = strtolower(trim($this->alipay_config['transport'])); $partner = trim($this->alipay_config['partner']); $veryfy_url = ''; if($transport == 'https') { $veryfy_url = $this->https_verify_url; } else { $veryfy_url = $this->http_verify_url; } $veryfy_url = $veryfy_url."partner=" . $partner . "&notify_id=" . $notify_id; $responseTxt = $this->getCore()->getHttpResponseGET($veryfy_url, $this->alipay_config['cacert']); return $responseTxt; } } ?>