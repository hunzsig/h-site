<?php
namespace Alipay\Lib\Fuwuchuang; class PushMsg extends AbstractLib{ public function test() { $image_text_msg1 = $this->mkImageTextMsg ( "标题", "描述", "http://wap.taobao.com", "https://i.alipayobjects.com/e/201310/1H9ctsy9oN_src.jpg", "loginAuth" ); $image_text_msg2 = $this->mkImageTextMsg ( "标题", "描述", "http://wap.taobao.com", "https://i.alipayobjects.com/e/201310/1H9ctsy9oN_src.jpg", "loginAuth" ); $image_text_msg = array ( $image_text_msg1, $image_text_msg2 ); $toUserId = "xLF-4RvtNKGlYDC8xLgTnI97w0QKRHRl-OmymTOxsGHnKDWiwQekMHiEi06tEbjg01"; $biz_content = $this->mkImageTextBizContent ( $toUserId, $image_text_msg ); print_r ( $this->sendRequest ( $biz_content ) ); } public function mkTextMsg($content) { $text = array ( 'content' => $content ); return $text; } public function mkImageTextMsg($title, $desc, $url, $imageUrl, $authType) { $articles_arr = array ( 'actionName' => iconv ( "UTF-8", "GBK", "立即查看" ), 'desc' => iconv ( "UTF-8", "GBK", $desc ), 'imageUrl' => $imageUrl, 'title' => iconv ( "UTF-8", "GBK", $title ), 'url' => $url, 'authType' => $authType ); return $articles_arr; } public function mkImageTextBizContent($toUserId, $articles) { $biz_content = array ( 'msgType' => 'image-text', 'createTime' => time (), 'articles' => $articles ); return $this->toBizContentJson ( $biz_content, $toUserId ); } public function mkTextBizContent($toUserId, $text) { $biz_content = array ( 'msgType' => 'text', 'text' => $text ); return $this->toBizContentJson ( $biz_content, $toUserId ); } private function toBizContentJson($biz_content, $toUserId) { if (isset ( $toUserId ) && ! empty ( $toUserId )) { $biz_content ['toUserId'] = $toUserId; } $content = $this->JSON ( $biz_content ); return $content; } public function sendRequest($biz_content) { $custom_send = new \AlipayMobilePublicMessageCustomSendRequest (); $custom_send->setBizContent ( $biz_content ); return $this->getFunctionInc()->aopclient_request_execute ( $custom_send ); } public function pushMsgRequest($biz_content) { $request = new \AlipayMobilePublicMessagePushRequest (); $request->setBizContent ( $biz_content ); return $this->getFunctionInc()->aopclient_request_execute ( $request ); } function is_utf8($text) { $e = mb_detect_encoding ( $text, array ( 'UTF-8', 'GBK' ) ); switch ($e) { case 'UTF-8' : return true; case 'GBK' : return false; } } public function downMediaRequest($biz_content, $fileName) { $config = $this->getConfig(); date_default_timezone_set ( PRC ); $paramsArray = array ( 'method' => "alipay.mobile.public.multimedia.download", 'biz_content' => $biz_content, 'charset' => $config ['charset'], 'sign_type' => 'RSA', 'app_id' => $config ['app_id'], 'timestamp' => date ( 'Y-m-d H:i:s', time () ), 'version' => "1.0" ); $as = new AlipaySign(); $sign = $as->sign_request ( $paramsArray, $config ['merchant_private_key_file'] ); $paramsArray ['sign'] = $sign; $url = "https://openfile.alipay.com/chat/multimedia.do?"; foreach ( $paramsArray as $key => $value ) { $url .= "$key=" . urlencode ( $value ) . "&"; } writeLog ( "请求图片地址：" . $url ); file_put_contents ( $fileName, file_get_contents ( $url ) ); } public function sendMsgRequest($biz_content, $isMultiSend = FALSE) { $config = $this->getConfig(); $paramsArray = array ( 'method' => "alipay.mobile.public.message.custom.send", 'biz_content' => $biz_content, 'charset' => $config ['charset'], 'sign_type' => 'RSA', 'app_id' => $config ['app_id'], 'timestamp' => date ( 'Y-m-d H:i:s', time () ) ); if ($isMultiSend) { $paramsArray ['method'] = "alipay.mobile.public.message.total.send"; } $as = new AlipaySign(); $sign = $as->sign_request ( $paramsArray, $config ['merchant_private_key_file'] ); $paramsArray ['sign'] = $sign; writeLog ( var_export ( $paramsArray, true ) ); return HttpRequest::sendPostRequst ( $config ['gatewayUrl'], $paramsArray ); } protected function arrayRecursive(&$array, $function, $apply_to_keys_also = false) { foreach ( $array as $key => $value ) { if (is_array ( $value )) { $this->arrayRecursive ( $array [$key], $function, $apply_to_keys_also ); } else { $array [$key] = $function ( $value ); } if ($apply_to_keys_also && is_string ( $key )) { $new_key = $function ( $key ); if ($new_key != $key) { $array [$new_key] = $array [$key]; unset ( $array [$key] ); } } } } protected function JSON($array) { $this->arrayRecursive ( $array, 'urlencode', true ); $json = json_encode ( $array ); return urldecode ( $json ); } }